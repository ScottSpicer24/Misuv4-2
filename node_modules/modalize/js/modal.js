var React = require('react');

var Modal = React.createClass({displayName: "Modal",
  getDefaultProps: function () {
    return {
      title: null,
      visible: false,
      acceptLabel: null,
      declineLabel: null,
      mods: 'modal-window-bottom',
      onClose: function (accepted, payload) {
      }
    };
  },
  renderHeader: function () {
    if (!this.props.title) {
      return null;
    } else {
      return (
        React.createElement("div", {className: "modal-header"}, 
          React.createElement("h3", null, this.props.title)
        )
      );
    }
  },
  renderContent: function () {
    return (
      React.createElement("div", {className: "modal-content-wrap"}, 
        this.props.children
      )
    );
  },
  onAccept: function (e) {
    this.props.onClose(true, null);
  },
  onDecline: function (e) {
    this.props.onClose(false, null);
  },
  onInnerFormSubmit:function(e){
    this.props.onClose(true, e.target);
  },
  onInnerFormReset:function(e){
    this.props.onClose(false, null);
  },
  renderFooter: function () {
    var acceptBtn = null, declineBtn = null;
    if (this.props.acceptLabel) {
      acceptBtn = (
        React.createElement("button", {onClick: this.onAccept}, 
          this.props.acceptLabel
        )
      );
    }
    if (this.props.declineLabel) {
      declineBtn = (
        React.createElement("button", {onClick: this.onDecline}, 
          this.props.declineLabel
        )
      );
    }
    if (acceptBtn || declineBtn) {
      return (
        React.createElement("div", {className: "modal-footer"}, 
          declineBtn, 
          acceptBtn
        )
      );
    } else {
      return null;
    }
  },
  render: function () {
    if (this.props.visible) {
      return (
        React.createElement("div", {className: "modalize-modal-wrap"}, 
          React.createElement("div", {className: "modal", 
               onSubmit: this.onInnerFormSubmit, 
               onReset: this.onInnerFormReset}, 
            this.renderHeader(), 
            this.renderContent(), 
            this.renderFooter()
          )
        )
      )
    } else {
      return null;
    }
  }
});

module.exports = Modal;
