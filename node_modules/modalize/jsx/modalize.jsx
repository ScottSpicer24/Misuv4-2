var React = require('react')
  , helpers = require('./helpers.jsx')
  , Modal = require('./modal.jsx');

function modalize(Component) {

  var Modalized = React.createClass({
    statics: {
      show: function (props, container) {
        props.modalVisible = true;
        helpers.show(Modalized, props, container);
      },
      shower: function (props, container) {
        return function () {
          Modalized.show(props, container);
        }
      }
    },
    getInitialState: function(){
      return {
        visible: this.props.modalVisible
      }
    },
    componentWillReceiveProps: function(newProps){
      this.setState({visible: newProps.modalVisible});
    },
    close: function (accepted, payload) {
      /* Hide modal here */
      this.setState({visible: false});
      this.props.modalOnClose(accepted, payload);
    },
    onClose: function(accepted, payload){
      this.setState({visible: false});
      this.props.modalOnClose(accepted, payload);
    },
    render: function () {
      var {
        modalTitle,
        modalVisible,
        modalAcceptLabel,
        modalDeclineLabel,
        modalMods,
        modalOnClose,
        ...props } = this.props;
      props.modalized = true;
      props.close = this.close;

      return (
        <Modal title={modalTitle}
               visible={this.state.visible}
               acceptLabel={modalAcceptLabel}
               declineLabel={modalDeclineLabel}
               mods={modalMods}
               onClose={this.onClose}>
          <Component {...props}>
            {this.props.children}
          </Component>
        </Modal>
      );
    }
  });

  return Modalized;
}

module.exports = modalize;
